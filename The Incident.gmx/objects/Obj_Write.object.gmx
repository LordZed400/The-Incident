<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>max_width = 400;

text = "";

can_click=true;
keyboard_string="";

xx = room_width/2;
yy = room_height/2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(keyboard_check_pressed(vk_anykey))
{
    if(string_width(keyboard_string)&lt;max_width)
    {
        text = keyboard_string;
    }
    else
    {
        keyboard_string = text;
    }
}

if(keyboard_check_pressed(vk_enter))
{
    global.name = keyboard_string;
    ini_open("score.ini")
            for(i=0;i&lt;10;i++)
            {
                //fill the global scores array with values from the ini, if blank fill with unknown
                global.score_array[i,0] = ini_read_string(string(i), "Name", "Unknown");
                global.score_array[i,1] = ini_read_real(string(i), "Score", 0);
            }
            ini_close();
            
            //search for first spot where players score is greater
            for(i=0;i&lt;10;i++)
            {
                if(global.points&gt;global.score_array[i,1])
                {
                    for(j=9;j&gt;i;j--)
                    {
                        global.score_array[j,0] = global.score_array[j-1,0];
                        global.score_array[j,1] = global.score_array[j-1,1];
                    }
                    
                    global.score_array[i,0] = global.name;
                    global.score_array[i,1] = global.points;
                    break;
                }
            }
            
            //update ini file with new values
            ini_open("score.ini")
            for(i=9;i&gt;=0;i--)
            {
                ini_write_string(string(i), "Name", global.score_array[i,0]);
                ini_write_real(string(i), "Score", global.score_array[i,1]);
            }
    ini_close();
    room_goto_next();

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_colour(c_green);
draw_set_font(Fn_Text);
draw_set_halign(fa_center);
draw_set_valign(fa_center);
draw_text(xx,128,"Score: " + string(global.points));



draw_set_colour(c_black);
if(text = "")   draw_text(xx,yy,"");
else    draw_text(xx,yy,text+"");

draw_set_halign(fa_left);
draw_set_valign(fa_top);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
