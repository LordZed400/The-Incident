<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>Sp_Player_Idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize
image_speed = 0.4;

input_left = 0;
input_right = 0;
input_atk = 0;
hcount = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.pause = 1) exit;
///Input check
if(global.player)
{
    input_left = -keyboard_check(vk_left);
    input_right = keyboard_check(vk_right);
}
else
{
    input_left = 0;
    input_right = 0;
}
input_atk = keyboard_check_pressed(vk_space);
hsp = input_left + input_right;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Input Action

if(place_meeting(x+hsp*10+hsp*30,y,Obj_Wall))
{
    while(!place_meeting(x+sign(hsp)+sign(hsp)*30,y,Obj_Wall))
    {
        x+=sign(hsp);
    }
hsp = 0;
}
x += hsp*10;

if(input_atk) hcount++;

//Beam Type Selection
if(keyboard_check_pressed(ord("Q"))) global.btype--;
if(keyboard_check_pressed(ord("E"))) global.btype++;
if(keyboard_check_pressed(ord("1"))) global.btype=0;
if(keyboard_check_pressed(ord("2"))) global.btype=1;
if(keyboard_check_pressed(ord("3"))) global.btype=2;

if(global.btype&lt;0) global.btype=2;
if(global.btype&gt;2) global.btype=0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Animate
if(hcount = 1)
{
    sprite_index = Sp_Player_Atk;
    image_index = 0;
    hcount++;
}

if(sprite_index = Sp_Player_Atk)
{
 global.player = 0; 
        if(image_index = 4)
        {
            this = instance_create(x+5,y,Projectile);
            this.x += 20;
            this.y -= 80;
            instance_create(x+25,y-110,Obj_Boom);
           
        }
   if(image_index &gt; image_number -1)
   {
       sprite_index = Sp_Player_Idle;
       global.player = 1;
       hcount = 0;
   }
}

if(sprite_index = Sp_Player_Dmg)
{
 if(image_index &gt;image_number-1) sprite_index = Sp_Player_Idle;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
